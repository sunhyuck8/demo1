<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bhome.demo.mapper.UserMapper">
    <insert id="userRegist" parameterType="UserDto">
        INSERT INTO user(
                         user_id,
                         user_pass,
                         user_name,
                         user_age,
                         user_sex,
                         user_email,
                         user_intro
                         )
        VALUES(
               #{user_id},
               #{user_pass},
               #{user_name},
               #{user_age},
               #{user_sex},
               #{user_email},
               #{user_intro}
               );
    </insert>

    <insert id="usersRegistInfo" parameterType="UserRegistDto" useGeneratedKeys="true" keyProperty="user_pk">
        INSERT INTO users(
            user_id,
            user_pass,
            user_name
        )
        VALUES(
                  #{user_id},
                  #{user_pass},
                  #{user_name}
              );
    </insert>

    <insert id="usersRegistPhoto" parameterType="UserFileDto">
        INSERT INTO usersPhoto(
            userPhoto_oriName,
            userPhoto_reName,
            userPhoto_size,
            users_pk
        )
        VALUES(
                  #{userPhoto_oriName},
                  #{userPhoto_reName},
                  #{userPhoto_size},
                  #{users_pk}
              );
    </insert>

    <select id="userLogin" parameterType="UserLoginDto" resultType="UserVo">
        select u.users_pk,
               u.user_id,
               u.user_pass,
               u.user_name,
               p.userPhoto_reName
        from users u
        Left join usersPhoto p
        On u.users_pk=p.users_pk
        where u.user_id =#{user_id} and u.user_pass=#{user_pass}
    </select>

    <update id="userUpdateInfo" parameterType="UserDto">
        UPDATE user SET
               user_id=#{user_id},
               user_pass=#{user_pass},
               user_name=#{user_name},
               user_age=#{user_age},
               user_sex=#{user_sex},
               user_email=#{user_email},
               user_intro=#{user_intro}
        where user_pk=#{user_pk}

    </update>

    <update id="userWithdraw" parameterType="int" useGeneratedKeys="true" keyProperty="user_name">
        UPDATE user SET
                        user_name='탈퇴한 회원'
        where user_pk=#{user_pk}

    </update>


    <!--delete는 추후 구현 예정 , 시간이 지나면 삭제하게끔 withdraw가 일정시간 지난걸 확인후 삭제-->
</mapper>